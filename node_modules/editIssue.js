var dbAccess = require('dbAccess.js');
var url = require('url');

var EditIssue = exports.EditIssue = function() {
};

/**
* Send the HTML page to the client
* @param response Response object to send the data
*/
function displayPage(response, user, issueId) {
	return function(error, rows) {
		
		user_id = user.id;
		isEditor = user.isEditor == '1';
		
		var canEdit = false;
		
		if (rows[0]==undefined) {
			response.flash.addError('Database Error');
			response.redirectTo('/viewIssue?id='+issueId);
		}
		else {
			var issue = rows[0];
			
			//Check if logged in user is issue creator or an editor
			if ((issue.user_id == user_id) || isEditor)
				canEdit = true;

			if (canEdit){
				variables = {
					canEdit: canEdit,
					title: issue.title,
					status: issue.status,
					location: issue.location,
					description: issue.description,
					link: issue.link,
					issueId: issue.id,
					openSelected: (issue.status == 'open'),
					resolvedSelected: (issue.status == 'resolved')
				}

				response.render('views/editIssue.html', variables);
				
			}
			else {
				variables = {
					canEdit: canEdit,
					issueId: issue.id
				}
				
				response.render('views/editIssue.html', variables);
			}
		}
	};
}

/**
* Main function of the module
* @param request Incoming request
* @param response Response object to send the data
*/
EditIssue.display = function(request, response) {
	var parsedURL = url.parse(request.url, true);
	var issueId = parsedURL.query.id;
	var sqlQuery = 'SELECT * FROM issues WHERE id=' + issueId;

	request.getUser(function(error, user){
		if(error)
		throw error;
		// only allow logged in editors or original posters to edit the issue
		if(user){
			dbAccess.runQuery(sqlQuery, displayPage(response, user, issueId));
		}
		else //Your not even logged in.
		{
			response.flash.addError('You must be logged in to edit an issue.');
			response.redirectTo('/viewIssue?id='+issueId);
		}
	})

}
