/* addIssue.js
 * Provies a functionality for adding new issues 
 */
 
var querystring = require('querystring'),
	util = require('util'),
	dbAccess = require('dbAccess'),
	reputation = require('reputation'); 
	tags = require('tags.js');
	
var AddIssue = exports.AddIssue = function() {};
	
AddIssue.display = function(req, res) {
	var variables = {}; 
	
	req.content = '';
	req.on('data', function(chunk) {
		req.content += chunk;
	});
	
	req.on('end', function() {
		req.getUser(function(error, user) {
			
			if (error) throw error;
			
			variables.loggedIn = user;
			
			if (req.method != 'POST') {
				variables.display = true;
				res.render('views/addIssue.html', variables);
				return;
			}
			
			var post = querystring.parse(req.content);
			
			// insert issue from the form 
			dbAccess.create('issues', { values: ['user_id="' + user.id + '"',
				'status="online"',
				'title="' + post.title + '"',
				'description="'+ post.description + '"',
				'link="' + post.link + '"',
				'location="' + post.location + '"']},
				function(error, issueId) {
					if (error) { // if an error occurred when inserting a new issue, print out the error
						console.log("Error inserting issue into database!"); 
						console.log(error); 
						// using history.back() function to go back to previous page to retain input form data
						variables.error = true;						
					}
					else {
						util.log("Successfully added a new issue with id " + issueId);
						util.log("user_id = " + post.title); 
						util.log("title = " + post.title); 
						util.log("description = " + post.description); 
						util.log("link = " + post.link); 
						util.log("location = " + post.location); 
						util.log("tags = " + post.tags);
					
						// Now add the tags if any were entered
						if (post.tags) {
							tags.tagIssue(issueId, post.tags, function (error) {
								if (error) {
									util.log("Error adding tags in addIssue");
									variables.fail = true;
								}
								else {
									variables.index = "'/index.html'";
									util.log("Issue " + issueId + " tagged successfully.");
									variables.success = true;
								}
							});
						}
						else {
							util.log("no tags to add..done!");
							util.log("Issue " + issueId + " tagged successfully.");
							// Show the success page
							variables.success = true;
						}
						
						// Add reputation for issue author 
						reputation.updateOnAddIssue(issueId, user.id); 
					}
				}); // end create
				
			variables.add = true;
			res.render('views/addIssue.html', variables);
		});
	});
}

/* 
 * Handle post form	
 */
AddIssue.add = function(req, res) {
	AddIssue.display(req,res);
}
